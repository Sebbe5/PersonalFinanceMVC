@model CalculateVM

@{
    ViewData["Title"] = "Calculate";
    Layout = "_FunctionPage";
}

<button id="calculatorToggler">Show calculator</button>

<div class="container mt-4 mb-4 bg-white rounded" id="calculatorDiv">

</div>

@section EndOfBody{
    <script>
        // Function to ensure that there is always a value in the amount input fields
        function ensureValue(input) {
            // Check if the input value is empty
            if (input.value === '') {
                // If it is empty, set its value to 0
                input.value = '0';
            }
            else {
                // If it is not empty, parse the input value to a number
                // and set it back as the input value to remove leading 0
                input.value = parseInt(input.value, 10);
            }
        }

        const calculatorDiv = document.getElementById("calculatorDiv")
        const calculatorToggler = document.getElementById("calculatorToggler")

        calculatorToggler.addEventListener("click", () => {
            fetch("/PredictionCalculator", {
                method: "GET",
            })
            .then(result => result.text())
            .then(html => calculatorDiv.innerHTML = html);
        })
    </script>

}

