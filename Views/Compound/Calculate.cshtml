@model CalculateVM

@{
    ViewData["Title"] = "Calculate";
    Layout = "_FunctionPage";
    string calculatorUsed = Model.CalculatorUsed != null ? Model.CalculatorUsed : string.Empty;
}

<div class="container">
    <div class="row mb-0">
        <button class="col-6 p-3" id="predictionCalculatorBtn">Compound Interest Calculator</button>
        <button class="col-6 p-3" id="goalCalculatorBtn">Compound Goal Calculator</button>
    </div>
</div>

<div class="container mt-2 mb-4 bg-white rounded" id="calculatorDiv">
</div>

@section EndOfBody{
    <script>
        // Function to ensure that there is always a value in the amount input fields
        function ensureValue(input) {
            // Check if the input value is empty
            if (input.value === '') {
                // If it is empty, set its value to 0
                input.value = '0';
            }
            else {
                // If it is not empty, parse the input value to a number
                // and set it back as the input value to remove leading 0
                input.value = parseInt(input.value, 10);
            }
        }

        const calculatorDiv = document.getElementById("calculatorDiv")
        const predictionCalculatorBtn = document.getElementById("predictionCalculatorBtn")
        const goalCalculatorBtn = document.getElementById("goalCalculatorBtn")

        if ('@calculatorUsed' === 'goal') {
            fetch("/GoalCalculator", {
                method: "GET",
            })
                .then(result => result.text())
                .then(html => calculatorDiv.innerHTML = html);
        }
        else {
            fetch("/PredictionCalculator", {
                method: "GET",
            })
                .then(result => result.text())
                .then(html => calculatorDiv.innerHTML = html);
        }


        predictionCalculatorBtn.addEventListener("click", () => {
            fetch("/PredictionCalculator", {
                method: "GET",
            })
                .then(result => result.text())
                .then(html => calculatorDiv.innerHTML = html);
        })

        goalCalculatorBtn.addEventListener("click", () => {
            fetch("/GoalCalculator", {
                method: "GET",
            })
                .then(result => result.text())
                .then(html => calculatorDiv.innerHTML = html);
        })
    </script>

}

