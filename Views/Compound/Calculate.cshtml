@model CalculateVM

@{
    ViewData["Title"] = "Calculate";
    Layout = "_FunctionPage";
}


<div class="container mt-4 mb-4 bg-white rounded">
    <h1 class="through">Compound Interest Calculator</h1>

    <form asp-action="Calculate">
        <partial name="Compound/_CompoundCalculatorInput" model="@(new _CompoundCalculatorInputVM{Name = "Principal", Value=Model.Principal, Title = "Principal Amount" ,Description = "The initial amount of money you invest"})" />
        <partial name="Compound/_CompoundCalculatorInput" model="@(new _CompoundCalculatorInputVM{Name = "MonthlyContribution",Value=Model.MonthlyContribution, Title = "Monthly Contribution" ,Description = "The amount of money you will invest every month"})" />
        <partial name="Compound/_CompoundCalculatorInput" model="@(new _CompoundCalculatorInputVM{Name = "Rate",Value=Model.Rate, Title = "Annual interest rate (%)" ,Description = "The annual interest rate you expect to earn on your investment"})" />
        <partial name="Compound/_CompoundCalculatorInput" model="@(new _CompoundCalculatorInputVM{Name = "Years",Value=Model.Years, Title = "Number of years" ,Description = "The number of years you plan to invest"})" />
        <button type="submit" class="btn btn-primary mt-3">Calculate</button>
    </form>

    @if (Model.Results != null && Model.Results.Any())
    {
        <h2 class="text-center mt-4">Compound Interest Results:</h2>
        <div class="table-responsive">
            <table class="table table-striped mt-3">
                <thead>
                    <tr>
                        <th>Year</th>
                        <th>Total contribution</th>
                        <th>Interest</th>
                        <th>Amount</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var result in Model.Results)
                    {
                        <tr>
                            <td>@result.Year</td>
                            <td>@result.Contribution.ToString("C")</td>
                            <td>@result.Interest.ToString("C")</td>
                            <td>@result.Amount.ToString("C")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@section EndOfBody{
    <script>
        // Function to ensure that there is always a value in the amount input fields
        function ensureValue(input) {
            // Check if the input value is empty
            if (input.value === '') {
                // If it is empty, set its value to 0
                input.value = '0';
            }
            else {
                // If it is not empty, parse the input value to a number
                // and set it back as the input value to remove leading 0
                input.value = parseInt(input.value, 10);
            }
        }
    </script>

}

